/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 656f80bd869b42cd909ab754.glb 
*/

import React, { useEffect, useRef } from 'react';
import { useAnimations, useFBX, useGLTF } from '@react-three/drei';

export function Avatar(props) {
	const { nodes, materials }: any = useGLTF('/656f80bd869b42cd909ab754.glb');
	const avatarRef = useRef(null);
	const { animations } = useFBX('/animations/Waving.fbx');

	animations[0].name = 'Waving';

	const { actions } = useAnimations(animations, avatarRef);

	useEffect(() => {
		actions['Waving'].reset().play();
	}, [actions]);

	return (
		<group
			{...props}
			dispose={null}
			ref={avatarRef}
			rotation-x={-Math.PI / 2}
		>
			<primitive
				ref={avatarRef}
				object={nodes.Hips}
			/>
			<skinnedMesh
				{...props}
				name='Wolf3D_Avatar'
				geometry={nodes.Wolf3D_Avatar?.geometry}
				material={materials.Wolf3D_Avatar}
				skeleton={nodes.Wolf3D_Avatar.skeleton}
				morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary}
				morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences}
			/>
		</group>
	);
}

useGLTF.preload('/656f80bd869b42cd909ab754.glb');
